{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js\";\nimport React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      msg: \"\",\n      chat: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", {\n      socket: this.props.id\n    });\n    this.props.socket.on(\"connect_to\", data => {\n      //this.setState({ chat: data });\n      if (data.error) {\n        this.props.addFlash({\n          success: false,\n          msg: data.error.msg\n        });\n      } else {\n        console.log(data);\n      }\n    });\n    this.props.socket.on(\"chat_message\", data => {\n      this.setState({\n        chat: [...this.state.chat, {\n          user: data.user,\n          msg: data.msg\n        }]\n      });\n\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"hello\");\n    /*\n    this.props.socket.emit(\"chat_message\", {\n      user: this.props.username,\n      msg: this.state.msg,\n    });\n    this.setState({ msg: \"\" });\n    */\n  }\n\n  renderChat() {\n    const {\n      chat\n    } = this.state;\n    return chat.map(({\n      user,\n      msg\n    }, idx) => {\n      if (user === this.props.username) {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: true,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: false,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.props.redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: this.props.redirectTo\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background ss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card card-body cscard chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chatbox ss3\",\n        ref: c => this.chatbox = c,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, this.renderChat()), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"input-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn text-left  csnav-btn \",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Send\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js"],"names":["React","Component","ChatLogs","ChatPage","constructor","props","_isMounted","onTextChange","e","setState","target","name","value","state","msg","chat","handleSubmit","bind","componentDidMount","socket","emit","id","on","data","error","addFlash","success","console","log","user","username","chatbox","scrollTo","scrollHeight","componentWillUnmount","event","preventDefault","renderChat","map","idx","render","redirectTo","pathname","c"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\nclass ChatPage extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      chat: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", { socket: this.props.id });\n    this.props.socket.on(\"connect_to\", (data) => {\n      //this.setState({ chat: data });\n      if (data.error) {\n        this.props.addFlash({ success: false, msg: data.error.msg });\n      } else {\n        console.log(data);\n      }\n    });\n    this.props.socket.on(\"chat_message\", (data) => {\n      this.setState({\n        chat: [...this.state.chat, { user: data.user, msg: data.msg }],\n      });\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onTextChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"hello\");\n    /*\n    this.props.socket.emit(\"chat_message\", {\n      user: this.props.username,\n      msg: this.state.msg,\n    });\n    this.setState({ msg: \"\" });\n    */\n  }\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ user, msg }, idx) => {\n      if (user === this.props.username) {\n        return <ChatLogs tf={true} key={idx} msg={msg} user={user} />;\n      } else {\n        return <ChatLogs tf={false} key={idx} msg={msg} user={user} />;\n      }\n    });\n  }\n\n  render() {\n    if (this.props.redirectTo) {\n      return <Redirect to={{ pathname: this.props.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"background ss\">\n          <div className=\"card card-body cscard chat\">\n            <div className=\"chatbox ss3\" ref={(c) => (this.chatbox = c)}>\n              {this.renderChat()}\n            </div>\n            <form onSubmit={this.handleSubmit} className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <button className=\"btn text-left  csnav-btn \" type=\"submit\">\n                  Send\n                </button>\n              </div>\n              <input type=\"text\" className=\"form-control\" placeholder=\"\" />\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}