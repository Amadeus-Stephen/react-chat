{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js\";\nimport React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      msg: \"\",\n      chat: [],\n      redirectTo: null,\n      id: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      id: this.props.id\n    });\n    this.props.socket.emit(\"connect_to\", {\n      socket: this.props.id\n    });\n    this.props.socket.on(\"connect_to\", data => {\n      if (data.error) {\n        this.props.addFlash({\n          success: false,\n          msg: data.error.msg\n        });\n\n        if (this._isMounted) {\n          this.setState({\n            redirectTo: \"/\"\n          });\n        }\n      } else {\n        if (this._isMounted) {\n          this.setState({\n            chat: data\n          });\n        }\n      }\n    });\n    this.props.socket.on(\"message\", data => {\n      if (this._isMounted) {\n        this.setState({\n          chat: [...this.state.chat, {\n            user: data.user,\n            msg: data.msg\n          }]\n        });\n\n        if (this.props.username === data.user) {\n          this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n        }\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.id !== this.state.id) {\n      this.props.socket.emit(\"connect_to\", {\n        socket: this.props.id\n      });\n      this.setState({\n        id: this.props.id\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.socket.emit(\"message\", {\n      user: {\n        username: this.props.username,\n        id: this.props.userid\n      },\n      msg: this.state.msg\n    });\n\n    if (this._isMounted) {\n      this.setState({\n        msg: \"\"\n      });\n    }\n  }\n\n  renderChat() {\n    const {\n      chat\n    } = this.state;\n    return chat.map(({\n      user,\n      msg\n    }, idx) => {\n      if (user.id === this.props.userid) {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          ifMe: true,\n          msg: msg,\n          user: user,\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          ifMe: false,\n          msg: msg,\n          user: user,\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: this.state.redirectTo\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container chatpage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \" card cscard chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chatbox ss3\",\n        ref: c => this.chatbox = c,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, this.renderChat()), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"input-group mb-3 card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn text-left  csnav-btn \",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Send\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        onChange: e => this.onTextChange(e),\n        value: this.state.msg,\n        name: \"msg\",\n        placeholder: \"\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js"],"names":["React","Component","ChatLogs","Redirect","ChatPage","constructor","props","_isMounted","onTextChange","e","setState","target","name","value","state","msg","chat","redirectTo","id","handleSubmit","bind","componentDidMount","socket","emit","on","data","error","addFlash","success","user","username","chatbox","scrollTo","scrollHeight","componentDidUpdate","componentWillUnmount","event","preventDefault","userid","renderChat","map","idx","render","pathname","c"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\nimport { Redirect } from \"react-router-dom\";\nclass ChatPage extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      chat: [],\n      redirectTo: null,\n      id: null,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({ id: this.props.id });\n    this.props.socket.emit(\"connect_to\", { socket: this.props.id });\n    this.props.socket.on(\"connect_to\", (data) => {\n      if (data.error) {\n        this.props.addFlash({ success: false, msg: data.error.msg });\n        if (this._isMounted) {\n          this.setState({ redirectTo: \"/\" });\n        }\n      } else {\n        if (this._isMounted) {\n          this.setState({ chat: data });\n        }\n      }\n    });\n    this.props.socket.on(\"message\", (data) => {\n      if (this._isMounted) {\n        this.setState({\n          chat: [...this.state.chat, { user: data.user, msg: data.msg }],\n        });\n        if (this.props.username === data.user) {\n          this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n        }\n      }\n    });\n  }\n  componentDidUpdate() {\n    if (this.props.id !== this.state.id) {\n      this.props.socket.emit(\"connect_to\", { socket: this.props.id });\n      this.setState({ id: this.props.id });\n    }\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onTextChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.socket.emit(\"message\", {\n      user: { username: this.props.username, id: this.props.userid },\n      msg: this.state.msg,\n    });\n    if (this._isMounted) {\n      this.setState({ msg: \"\" });\n    }\n  }\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ user, msg }, idx) => {\n      if (user.id === this.props.userid) {\n        return <ChatLogs ifMe={true} msg={msg} user={user} key={idx} />;\n      } else {\n        return <ChatLogs ifMe={false} msg={msg} user={user} key={idx} />;\n      }\n    });\n  }\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"container chatpage\">\n          <div\n            className=\" card\n           cscard chat\"\n          >\n            <div className=\"chatbox ss3\" ref={(c) => (this.chatbox = c)}>\n              {this.renderChat()}\n            </div>\n            <form\n              onSubmit={this.handleSubmit}\n              className=\"input-group mb-3 card-body\"\n            >\n              <div className=\"input-group-prepend\">\n                <button className=\"btn text-left  csnav-btn \" type=\"submit\">\n                  Send\n                </button>\n              </div>\n              <input\n                className=\"form-control\"\n                onChange={(e) => this.onTextChange(e)}\n                value={this.state.msg}\n                name=\"msg\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}