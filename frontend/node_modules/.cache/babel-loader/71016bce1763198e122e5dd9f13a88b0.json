{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport HomePage from \"./componets/homePage\";\nconst server = \"http://localhost:5050\";\nconst socket = io.connect(server);\nlet current_user;\n\nif (JSON.parse(window.sessionStorage.getItem(\"user\"))) {\n  current_user = JSON.parse(window.sessionStorage.getItem(\"user\"))[0];\n} else {\n  current_user = {\n    username: \"\"\n  };\n}\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/chat/:chatype/:chatroom/\",\n      exact: true,\n      component: ChatPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass HomePage2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      chatype: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backgoundpage chatpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onMessageSubmit = e => {\n      e.preventDefault();\n      socket.emit(\"chat_message\", {\n        user: this.state.user,\n        msg: this.state.msg,\n        type: this.props.match.params.chatype\n      });\n      this.setState({\n        msg: \"\"\n      });\n    };\n\n    this.state = {\n      msg: \"\",\n      chat: [],\n      user: current_user.username,\n      prevchatroom: this.props.match.params.chatroom\n    };\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    socket.emit(\"connect_to\", {\n      socket: this.props.match.params.chatroom,\n      type: this.props.match.params.chatype\n    });\n    socket.on(\"connect_to\", data => {\n      this.setState({\n        chat: data\n      });\n    });\n    socket.on(\"chat_message\", data => {\n      this.setState({\n        chat: [...this.state.chat, {\n          user: data.user,\n          msg: data.msg\n        }]\n      });\n\n      if (this.state.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.prevchatroom !== this.props.match.params.chatroom) {\n      this.setState({\n        prevchatroom: this.props.match.params.chatroom\n      });\n      socket.emit(\"connect_to\", {\n        socket: this.props.match.params.chatroom,\n        type: this.props.match.params.chatype\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  renderChat() {\n    const {\n      chat\n    } = this.state;\n    return chat.map(({\n      user,\n      msg\n    }, idx) => {\n      if (user === current_user.username) {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: true,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: false,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbackground chatpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox\",\n      ref: c => this.chatbox = c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, this.renderChat())), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onMessageSubmit,\n      className: \" input-group messageform \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn text-left text-info  input-group-prepend\",\n      onClick: this.onMessageSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Send\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"msg\",\n      className: \"form-control \",\n      onChange: e => this.onTextChange(e),\n      value: this.state.msg,\n      placeholder: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n/*\n<Navbar username={this.props.match.params.user} />\n*/\n\n\nclass ChatLogs extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.props.tf ? \"text-right\" : \"text-left\"} m-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, this.props.msg)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/App.js"],"names":["React","Component","axios","io","BrowserRouter","Router","Route","Link","HomePage","server","socket","connect","current_user","JSON","parse","window","sessionStorage","getItem","username","App","render","ChatPage","HomePage2","constructor","props","_isMounted","componentDidMount","componentWillUnmount","onTextChange","e","setState","target","name","value","onMessageSubmit","preventDefault","emit","user","state","msg","type","match","params","chatype","chat","prevchatroom","chatroom","on","data","chatbox","scrollTo","scrollHeight","componentDidUpdate","renderChat","map","idx","c","ChatLogs","tf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport HomePage from \"./componets/homePage\";\n\nconst server = \"http://localhost:5050\";\nconst socket = io.connect(server);\nlet current_user;\nif (JSON.parse(window.sessionStorage.getItem(\"user\"))) {\n  current_user = JSON.parse(window.sessionStorage.getItem(\"user\"))[0];\n} else {\n  current_user = { username: \"\" };\n}\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/chat/:chatype/:chatroom/\" exact component={ChatPage} />\n      </Router>\n    );\n  }\n}\n\nclass HomePage2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n  }\n  componentDidMount() {\n    this._isMounted = true;\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <div>\n        <Navbar chatype={null} />\n        <div className=\"backgoundpage chatpage\"></div>\n      </div>\n    );\n  }\n}\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      chat: [],\n      user: current_user.username,\n      prevchatroom: this.props.match.params.chatroom,\n    };\n    this._isMounted = false;\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    socket.emit(\"connect_to\", {\n      socket: this.props.match.params.chatroom,\n      type: this.props.match.params.chatype,\n    });\n    socket.on(\"connect_to\", (data) => {\n      this.setState({ chat: data });\n    });\n    socket.on(\"chat_message\", (data) => {\n      this.setState({\n        chat: [...this.state.chat, { user: data.user, msg: data.msg }],\n      });\n      if (this.state.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n  componentDidUpdate() {\n    if (this.state.prevchatroom !== this.props.match.params.chatroom) {\n      this.setState({ prevchatroom: this.props.match.params.chatroom });\n      socket.emit(\"connect_to\", {\n        socket: this.props.match.params.chatroom,\n        type: this.props.match.params.chatype,\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onTextChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onMessageSubmit = (e) => {\n    e.preventDefault();\n    socket.emit(\"chat_message\", {\n      user: this.state.user,\n      msg: this.state.msg,\n      type: this.props.match.params.chatype,\n    });\n    this.setState({ msg: \"\" });\n  };\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ user, msg }, idx) => {\n      if (user === current_user.username) {\n        return <ChatLogs tf={true} key={idx} msg={msg} user={user} />;\n      } else {\n        return <ChatLogs tf={false} key={idx} msg={msg} user={user} />;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"chatbackground chatpage\">\n          <div className=\"render-chat\">\n            <div className=\"chatbox\" ref={(c) => (this.chatbox = c)}>\n              {this.renderChat()}\n            </div>\n          </div>\n          <form\n            onSubmit={this.onMessageSubmit}\n            className=\" input-group messageform \"\n          >\n            <div className=\"input-group-prepend\">\n              <button\n                type=\"button\"\n                className=\"btn text-left text-info  input-group-prepend\"\n                onClick={this.onMessageSubmit}\n              >\n                Send\n              </button>\n            </div>\n            <input\n              name=\"msg\"\n              className=\"form-control \"\n              onChange={(e) => this.onTextChange(e)}\n              value={this.state.msg}\n              placeholder=\"message\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n/*\n<Navbar username={this.props.match.params.user} />\n*/\nclass ChatLogs extends React.Component {\n  render() {\n    return (\n      <div className={`${this.props.tf ? \"text-right\" : \"text-left\"} m-2`}>\n        <span className=\"badge badge-dark\">\n          <h6 className=\"m-0 text-info\">{this.props.msg}</h6>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}