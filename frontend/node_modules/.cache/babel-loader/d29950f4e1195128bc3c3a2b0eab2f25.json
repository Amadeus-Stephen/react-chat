{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { Route } from \"react-router-dom\";\nimport HomePage from \"./componets/homePage\";\nimport LeftNavbar from \"./componets/navbar/leftNavbar\";\nimport TopNavbar from \"./componets/navbar/topNavbar\";\nimport ChatPage from \"./componets/chat/chatPage\";\nimport SignupPage from \"./componets/user/signupPage\";\nimport LoginPage from \"./componets/user/loginPage\";\nimport ThrowFlash from \"./componets/util/throwFlash\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.socket = io.connect(\"/\");\n    this.state = {\n      loggedIn: false,\n      username: null,\n      userid: null,\n      chatroom: null,\n      id: null,\n      flashes: [],\n      redirectTo: null\n    };\n    this.updateAppState = this.updateAppState.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n    this.signup = this.signup.bind(this);\n    this.addFlash = this.addFlash.bind(this);\n    this.removeFlash = this.removeFlash.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      redirectTo: null\n    });\n    this.socket.on(\"init\", data => {\n      console.log(data);\n    });\n    this.getUser();\n  }\n\n  componentDidUpdate() {\n    this._isMounted = false;\n  }\n\n  updateAppState(stateObject) {\n    this.setState(stateObject);\n    console.log(this.state);\n  }\n\n  createChat(name) {\n    axios.post(\"/create/chatroom\", {\n      name,\n      owner: {\n        id: this.state.userid,\n        username: this.state.username\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        if (response.data.error) {\n          let msg = response.data.error.msg;\n          this.addFlash({\n            success: false,\n            msg\n          });\n        } else {\n          console.log(response.data);\n\n          if (response.data.success) {\n            let msg = response.data.success.msg;\n            this.addFlash({\n              success: true,\n              msg\n            });\n          }\n        }\n      }\n    });\n  }\n\n  getUser() {\n    axios.get(\"/user/\").then(response => {\n      if (response.data.user) {\n        // if express sees that there is a authenicated\n        // user saved in the session it will return the users data\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          userid: response.data.user.id\n        });\n      } else {\n        //if no user is saved in the express session it will simply go about it's day\n        console.log(\"Get user: no user\");\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n    });\n  }\n\n  logout() {\n    axios.post(\"/user/logout\").then(response => {\n      //sends a post request to log user out of current session\n      if (response.status === 200) {\n        this.addFlash({\n          success: true,\n          msg: \"Successfully logged out\"\n        });\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n    }).catch(error => {\n      console.log(\"Logout error\", error);\n    });\n  }\n\n  login(username, password) {\n    axios.post(\"/user/login\", {\n      username,\n      password\n    }).then(response => {\n      if (response.status === 200) {\n        if (response.data.error) {\n          let msg = response.data.error.msg;\n          this.addFlash({\n            success: false,\n            msg\n          });\n        } else {\n          console.log(response.data);\n          this.setState({\n            loggedIn: true,\n            username: response.data.username\n          });\n          this.addFlash({\n            success: true,\n            msg: \"Logged in successfully \"\n          });\n          this.setRedirect(\"/\");\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n      this.addFlash({\n        success: false,\n        msg: \"An unexpected error has occurred. Please try again later\"\n      });\n    });\n  }\n\n  signup(username, email, password, confirmPassword) {\n    axios.post(\"/user/\", {\n      username,\n      email,\n      password,\n      confirmPassword\n    }).then(response => {\n      if (response.data.error) {\n        let msg = response.data.error.msg;\n        this.addFlash({\n          success: false,\n          msg\n        });\n      } else {\n        console.log(response.data);\n        this.addFlash({\n          success: true,\n          msg: \"Successfully created account\"\n        });\n        this.setRedirect(\"/login\");\n      }\n    }).catch(error => {\n      console.log(error);\n      this.addFlash({\n        success: false,\n        msg: \"An unexpected error has occurred. Please try again later\"\n      });\n    });\n  }\n\n  addFlash(flash) {\n    let flashes = this.state.flashes;\n    flashes.push(flash);\n    this.setState({\n      flashes\n    });\n  }\n\n  removeFlash(index) {\n    let flashes = this.state.flashes;\n    flashes.splice(index, 1);\n    this.setState({\n      flashes\n    });\n  }\n\n  setRedirect(redirectTo) {\n    this.setState({\n      redirectTo\n    });\n  }\n\n  renderFlash() {\n    return this.state.flashes.map(({\n      msg,\n      success\n    }, index) => {\n      return /*#__PURE__*/React.createElement(ThrowFlash, {\n        removeFlash: this.removeFlash,\n        msg: msg,\n        success: success,\n        index: index,\n        key: index,\n        length: this.state.flashes.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TopNavbar, {\n      logout: this.logout,\n      loggedIn: this.state.loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LeftNavbar, {\n      updateAppState: this.updateAppState,\n      socket: this.socket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, this.renderFlash(), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(HomePage, {\n        user: this.state.username,\n        loggedIn: this.state.loggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/chat/\",\n      render: () => /*#__PURE__*/React.createElement(ChatPage, {\n        updateAppState: this.updateAppState,\n        addFlash: this.addFlash,\n        id: this.state.id,\n        socket: this.socket,\n        username: this.state.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(LoginPage, {\n        login: this.login,\n        loggedIn: this.state.loggedIn,\n        redirectTo: this.state.redirectTo,\n        setRedirect: this.setRedirect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(SignupPage, {\n        signup: this.signup,\n        redirectTo: this.state.redirectTo,\n        setRedirect: this.setRedirect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/App.js"],"names":["React","Component","io","axios","Route","HomePage","LeftNavbar","TopNavbar","ChatPage","SignupPage","LoginPage","ThrowFlash","App","constructor","_isMounted","socket","connect","state","loggedIn","username","userid","chatroom","id","flashes","redirectTo","updateAppState","bind","getUser","logout","login","signup","addFlash","removeFlash","setRedirect","componentDidMount","setState","on","data","console","log","componentDidUpdate","stateObject","createChat","name","post","owner","then","response","status","error","msg","success","get","user","catch","password","email","confirmPassword","flash","push","index","splice","renderFlash","map","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { Route } from \"react-router-dom\";\nimport HomePage from \"./componets/homePage\";\n\nimport LeftNavbar from \"./componets/navbar/leftNavbar\";\nimport TopNavbar from \"./componets/navbar/topNavbar\";\n\nimport ChatPage from \"./componets/chat/chatPage\";\n\nimport SignupPage from \"./componets/user/signupPage\";\nimport LoginPage from \"./componets/user/loginPage\";\n\nimport ThrowFlash from \"./componets/util/throwFlash\";\n\nclass App extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n    this.socket = io.connect(\"/\");\n    this.state = {\n      loggedIn: false,\n      username: null,\n      userid: null,\n      chatroom: null,\n      id: null,\n      flashes: [],\n      redirectTo: null,\n    };\n    this.updateAppState = this.updateAppState.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n    this.signup = this.signup.bind(this);\n    this.addFlash = this.addFlash.bind(this);\n    this.removeFlash = this.removeFlash.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({ redirectTo: null });\n    this.socket.on(\"init\", (data) => {\n      console.log(data);\n    });\n    this.getUser();\n  }\n  componentDidUpdate() {\n    this._isMounted = false;\n  }\n  updateAppState(stateObject) {\n    this.setState(stateObject);\n    console.log(this.state);\n  }\n  createChat(name) {\n    axios\n      .post(\"/create/chatroom\", {\n        name,\n        owner: { id: this.state.userid, username: this.state.username },\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          if (response.data.error) {\n            let msg = response.data.error.msg;\n            this.addFlash({ success: false, msg });\n          } else {\n            console.log(response.data);\n            if (response.data.success) {\n              let msg = response.data.success.msg;\n              this.addFlash({ success: true, msg });\n            }\n          }\n        }\n      });\n  }\n  getUser() {\n    axios.get(\"/user/\").then((response) => {\n      if (response.data.user) {\n        // if express sees that there is a authenicated\n        // user saved in the session it will return the users data\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          userid: response.data.user.id,\n        });\n      } else {\n        //if no user is saved in the express session it will simply go about it's day\n        console.log(\"Get user: no user\");\n        this.setState({\n          loggedIn: false,\n          username: null,\n        });\n      }\n    });\n  }\n  logout() {\n    axios\n      .post(\"/user/logout\")\n      .then((response) => {\n        //sends a post request to log user out of current session\n        if (response.status === 200) {\n          this.addFlash({ success: true, msg: \"Successfully logged out\" });\n          this.setState({\n            loggedIn: false,\n            username: null,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Logout error\", error);\n      });\n  }\n  login(username, password) {\n    axios\n      .post(\"/user/login\", { username, password })\n      .then((response) => {\n        if (response.status === 200) {\n          if (response.data.error) {\n            let msg = response.data.error.msg;\n            this.addFlash({ success: false, msg });\n          } else {\n            console.log(response.data);\n            this.setState({\n              loggedIn: true,\n              username: response.data.username,\n            });\n            this.addFlash({ success: true, msg: \"Logged in successfully \" });\n            this.setRedirect(\"/\");\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.addFlash({\n          success: false,\n          msg: \"An unexpected error has occurred. Please try again later\",\n        });\n      });\n  }\n  signup(username, email, password, confirmPassword) {\n    axios\n      .post(\"/user/\", { username, email, password, confirmPassword })\n      .then((response) => {\n        if (response.data.error) {\n          let msg = response.data.error.msg;\n          this.addFlash({ success: false, msg });\n        } else {\n          console.log(response.data);\n          this.addFlash({ success: true, msg: \"Successfully created account\" });\n          this.setRedirect(\"/login\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.addFlash({\n          success: false,\n          msg: \"An unexpected error has occurred. Please try again later\",\n        });\n      });\n  }\n  addFlash(flash) {\n    let flashes = this.state.flashes;\n    flashes.push(flash);\n    this.setState({ flashes });\n  }\n  removeFlash(index) {\n    let flashes = this.state.flashes;\n    flashes.splice(index, 1);\n    this.setState({ flashes });\n  }\n\n  setRedirect(redirectTo) {\n    this.setState({ redirectTo });\n  }\n  renderFlash() {\n    return this.state.flashes.map(({ msg, success }, index) => {\n      return (\n        <ThrowFlash\n          removeFlash={this.removeFlash}\n          msg={msg}\n          success={success}\n          index={index}\n          key={index}\n          length={this.state.flashes.length}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <TopNavbar logout={this.logout} loggedIn={this.state.loggedIn} />\n        <LeftNavbar updateAppState={this.updateAppState} socket={this.socket} />\n        <div className=\"mt-5 \">\n          {this.renderFlash()}\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <HomePage\n                user={this.state.username}\n                loggedIn={this.state.loggedIn}\n              />\n            )}\n          />\n          <Route\n            path=\"/chat/\"\n            render={() => (\n              <ChatPage\n                updateAppState={this.updateAppState}\n                addFlash={this.addFlash}\n                id={this.state.id}\n                socket={this.socket}\n                username={this.state.username}\n              />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            render={() => (\n              <LoginPage\n                login={this.login}\n                loggedIn={this.state.loggedIn}\n                redirectTo={this.state.redirectTo}\n                setRedirect={this.setRedirect}\n              />\n            )}\n          />\n          <Route\n            path=\"/signup\"\n            render={() => (\n              <SignupPage\n                signup={this.signup}\n                redirectTo={this.state.redirectTo}\n                setRedirect={this.setRedirect}\n              />\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}