{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js\";\nimport React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      msg: \"\",\n      chat: []\n    };\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", {\n      id: this.props.id\n    });\n    this.props.socket.on(\"connect_to\", data => {\n      this.setState({\n        chat: data\n      });\n    });\n    this.props.socket.on(\"chat_message\", data => {\n      this.setState({\n        chat: [...this.state.chat, {\n          user: data.user,\n          msg: data.msg\n        }]\n      });\n\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onMessageSubmit(e) {\n    e.preventDefault();\n    console.log(\"hello\");\n    this.props.socket.emit(\"chat_message\", {\n      user: this.props.username,\n      msg: this.state.msg\n    });\n    this.setState({\n      msg: \"\"\n    });\n  }\n\n  renderChat() {\n    const {\n      chat\n    } = this.state;\n    return chat.map(({\n      user,\n      msg\n    }, idx) => {\n      if (user === this.props.username) {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: true,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: false,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background ss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body cscard chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox ss3\",\n      ref: c => this.chatbox = c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, this.renderChat()), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      onSubmit: this.onMessageSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn text-left  csnav-btn \",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Send\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js"],"names":["React","Component","ChatLogs","ChatPage","constructor","props","_isMounted","onTextChange","e","setState","target","name","value","state","msg","chat","onMessageSubmit","bind","componentDidMount","socket","emit","id","on","data","user","username","chatbox","scrollTo","scrollHeight","componentWillUnmount","preventDefault","console","log","renderChat","map","idx","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\nclass ChatPage extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      chat: [],\n    };\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", { id: this.props.id });\n    this.props.socket.on(\"connect_to\", (data) => {\n      this.setState({ chat: data });\n    });\n    this.props.socket.on(\"chat_message\", (data) => {\n      this.setState({\n        chat: [...this.state.chat, { user: data.user, msg: data.msg }],\n      });\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onTextChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onMessageSubmit(e) {\n    e.preventDefault();\n    console.log(\"hello\");\n    this.props.socket.emit(\"chat_message\", {\n      user: this.props.username,\n      msg: this.state.msg,\n    });\n    this.setState({ msg: \"\" });\n  }\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ user, msg }, idx) => {\n      if (user === this.props.username) {\n        return <ChatLogs tf={true} key={idx} msg={msg} user={user} />;\n      } else {\n        return <ChatLogs tf={false} key={idx} msg={msg} user={user} />;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"background ss\">\n        <div className=\"card card-body cscard chat\">\n          <div className=\"chatbox ss3\" ref={(c) => (this.chatbox = c)}>\n            {this.renderChat()}\n          </div>\n          <form className=\"input-group mb-3\">\n            <div\n              className=\"input-group-prepend\"\n              onSubmit={this.onMessageSubmit()}\n            >\n              <button className=\"btn text-left  csnav-btn \" type=\"submit\">\n                Send\n              </button>\n            </div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}