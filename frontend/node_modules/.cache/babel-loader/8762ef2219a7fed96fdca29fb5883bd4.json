{"ast":null,"code":"var _jsxFileName = \"/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js\";\nimport React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onMessageSubmit = e => {\n      e.preventDefault();\n      this.props.socket.emit(\"chat_message\", {\n        user: this.props.username,\n        msg: this.state.msg\n      });\n      this.setState({\n        msg: \"\"\n      });\n    };\n\n    this.state = {\n      msg: \"\",\n      chat: []\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", {\n      id: this.props.id\n    });\n    this.props.socket.on(\"connect_to\", data => {\n      this.setState({\n        chat: data\n      });\n    });\n    this.props.socket.on(\"chat_message\", data => {\n      this.setState({\n        chat: [...this.state.chat, {\n          user: data.user,\n          msg: data.msg\n        }]\n      });\n\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  renderChat() {\n    const {\n      chat\n    } = this.state;\n    return chat.map(({\n      user,\n      msg\n    }, idx) => {\n      if (user === this.props.username) {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: true,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ChatLogs, {\n          tf: false,\n          key: idx,\n          msg: msg,\n          user: user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbackground \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox\",\n      ref: c => this.chatbox = c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.renderChat())));\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amadeus/react/react-chat/frontend/src/componets/chat/chatPage.js"],"names":["React","Component","ChatLogs","ChatPage","constructor","props","_isMounted","onTextChange","e","setState","target","name","value","onMessageSubmit","preventDefault","socket","emit","user","username","msg","state","chat","componentDidMount","id","on","data","chatbox","scrollTo","scrollHeight","componentWillUnmount","renderChat","map","idx","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChatLogs from \"./chatLogs\";\nclass ChatPage extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      chat: [],\n    };\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.socket.emit(\"connect_to\", { id: this.props.id });\n    this.props.socket.on(\"connect_to\", (data) => {\n      this.setState({ chat: data });\n    });\n    this.props.socket.on(\"chat_message\", (data) => {\n      this.setState({\n        chat: [...this.state.chat, { user: data.user, msg: data.msg }],\n      });\n      if (this.props.username.user === data.user) {\n        this.chatbox.scrollTo(0, this.chatbox.scrollHeight);\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onTextChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onMessageSubmit = (e) => {\n    e.preventDefault();\n    this.props.socket.emit(\"chat_message\", {\n      user: this.props.username,\n      msg: this.state.msg,\n    });\n    this.setState({ msg: \"\" });\n  };\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ user, msg }, idx) => {\n      if (user === this.props.username) {\n        return <ChatLogs tf={true} key={idx} msg={msg} user={user} />;\n      } else {\n        return <ChatLogs tf={false} key={idx} msg={msg} user={user} />;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"chatbackground \">\n        <div className=\"card card-body\">\n          <div className=\"chatbox\" ref={(c) => (this.chatbox = c)}>\n            {this.renderChat()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}